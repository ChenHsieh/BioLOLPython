import streamlit as st
from bioLOLPython.interpreter import *
import tempfile
import io
from contextlib import redirect_stdout

# Styling
st.set_page_config(
    page_title="bioLOL Webshell", 
    layout="centered",
    page_icon="üòπ"
)
st.markdown(
    """
    <style>
        .stApp {
            background-color: rgba(0,0,0) !important;
            color: #33ff33;
            font-family: 'Courier New', Courier, monospace;
        }
        .stTextArea textarea {
            background-color: rgba(0,0,0,0.7) !important;
            color: #33ff33 !important;
        }
        .stButton>button {
            background-color: #111;
            border: 1px solid #33ff33;
            color: #33ff33;
        }
        h1, h2, h3, h4, h5, h6 {
            color: white !important;
        }
        .css-1lcbmhc.e1f1d6gn0 {
           gap: 2rem !important;
        }       
    </style>
""", unsafe_allow_html=True)


st.title("üòπ bioLOL Interpurr-ter")
st.markdown("_Cuz sometimes your genes just need more memes._")

col1, col2 = st.columns(2)
with col1:
    st.markdown("""

### üê± What is Lolspeak?

Lolspeak is the internet dialect of the classic [lolcat](https://en.wikipedia.org/wiki/Lolcat) meme era ‚Äî think early 2000s cat pictures with broken English like:
- "I CAN HAS CHEEZBURGER?"
- "I'M IN UR BASE, SEQUENCIN UR DNA"
                
here is an example generated by ChatGPT-4o:
                
![](https://github.com/ChenHsieh/bioLOLPython/blob/master/static/bg_lolcat.jpg?raw=true)

[LOLCODE](https://en.wikipedia.org/wiki/LOLCODE#Implementations) was invented as a joke programming language using lolspeak. This app builds on that glorious nonsense and [LOLPython](https://github.com/KartikTalwar/LOLPython) ‚Äî adding bioinformatics commands so you can meme your way through molecular biology üß¨üòπ

    """)
with col2:
    st.markdown("""

### üíª How to Use

- Pick an example from the dropdown (like GC content, translation, alignment), or write your own in lolspeak-style scripting.
- Click **"RUN da CODE"** to see the output.
- Try commands like `DNA GO X ITZ "ATGC"`, `GC BOMB X`, `TRANSLATE`, `I CRAVE VIOLENCE`, etc.

Make it chaotic. Make it bio. Make it LOL.
""")
    st.divider()
    # Examples
    examples = {
        "GC Content": """HAI GENZOME 1.0
    DNA GO X ITZ "ATGCATGC"
    GC BOMB X
    KTHXBYE""",
        "Protein Translation": """HAI GENZOME 1.0
    DNA GO Y ITZ "ATGGAGGAGCC"
    TRANSLATE Y
    VISIBLE "üß¨ Protein: " + Y
    KTHXBYE""",
        "Alignment": """HAI GENZOME 1.0
    DNA GO A ITZ "ATGCGTAGG"
    DNA GO B ITZ "ATGCGTACG"
    ALIGN A WIT B
    KTHXBYE"""
    }

    # Selection
    st.markdown("üíæ Choose an example or start typing your own:")
    script_option = st.selectbox("üíæ Choose an example or start typing your own:", ["Write your own"] + list(examples.keys()), label_visibility="collapsed")

    # Script input
    default_code = examples.get(script_option, "HAI GENZOME 1.0\nDNA GO X ITZ \"ATGC\"\nVISIBLE X\nKTHXBYE")
    st.markdown("‚úèÔ∏è Write your .lolz code here:")
    code = st.text_area("‚úèÔ∏è Write your .lolz code here:", default_code, height=200, label_visibility="collapsed")

    # Run
    if st.button("üí• RUN da CODE"):
        st.subheader("üñ®Ô∏è Outputz")
        output_buffer = io.StringIO()
        with redirect_stdout(output_buffer):
            try:
                for line in code.splitlines():
                    result = handle_line(line.strip())
                    if result is not None:
                        print(result)
            except Exception as e:
                st.error(f"Oopsie: {e}")
        st.code(output_buffer.getvalue(), language="text")
